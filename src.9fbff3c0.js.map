{"version":3,"sources":["index.js"],"names":["CountdownTimer","constructor","selector","targetDate","Date","days","document","querySelector","hours","minutes","seconds","pad","value","String","padStart","renderPage","mins","secs","textContent","showTime","setInterval","currentTime","getTime","time","Math","floor","timer","startBtn","startTimer","setAttribute","addEventListener"],"mappings":";;;AAgDC,aAhDD,QAAA,oBAEA,MAAMA,EACJC,aAAY,SAAEC,EAAF,WAAYC,IACjBA,KAAAA,WAAa,IAAIC,KAAKD,GACtBE,KAAAA,KAAOC,SAASC,iBAAiBL,+BACjCM,KAAAA,MAAQF,SAASC,iBAAiBL,gCAClCO,KAAAA,QAAUH,SAASC,iBAAiBL,+BACpCQ,KAAAA,QAAUJ,SAASC,iBAAiBL,+BAG3CS,IAAIC,GACKC,OAAAA,OAAOD,GAAOE,SAAS,EAAG,KAGnCC,WAAWV,EAAMG,EAAOQ,EAAMC,GACvBZ,KAAAA,KAAKa,YAAcb,EACnBG,KAAAA,MAAMU,YAAcV,EACpBC,KAAAA,QAAQS,YAAcF,EACtBN,KAAAA,QAAQQ,YAAcD,EAG7BE,WACEC,YAAY,KACJC,MAAAA,GAAc,IAAIjB,MAAOkB,UACzBC,EAAO,KAAKpB,WAAakB,EAEzBhB,EAAO,KAAKM,IAAIa,KAAKC,MAAMF,EAAQ,QACnCf,EAAQ,KAAKG,IAAIa,KAAKC,MAAOF,EAAQ,MAAyB,OAC9DP,EAAO,KAAKL,IAAIa,KAAKC,MAAOF,EAAQ,KAAoB,MACxDN,EAAO,KAAKN,IAAIa,KAAKC,MAAOF,EAAQ,IAAc,MAEnDR,KAAAA,WAAWV,EAAMG,EAAOQ,EAAMC,IAClC,MAIP,MAAMS,EAAQ,IAAI1B,EAAe,CAC/BE,SAAU,WACVC,WAAY,IAAIC,KAAK,mBAGjBuB,EAAWrB,SAASC,cAAc,6BAGxC,SAASqB,IACPD,EAASE,aAAa,WAAY,IAClCH,EAAMP,WAJRQ,EAASG,iBAAiB,QAASF","file":"src.9fbff3c0.js","sourceRoot":"../src","sourcesContent":["import './sass/main.scss';\n\nclass CountdownTimer {\n  constructor({ selector, targetDate }) {\n    this.targetDate = new Date(targetDate);\n    this.days = document.querySelector(`${selector} .value[data-value=\"days\"]`);\n    this.hours = document.querySelector(`${selector} .value[data-value=\"hours\"]`);\n    this.minutes = document.querySelector(`${selector} .value[data-value=\"mins\"]`);\n    this.seconds = document.querySelector(`${selector} .value[data-value=\"secs\"]`);\n  }\n\n  pad(value) {\n    return String(value).padStart(2, '0');\n  }\n\n  renderPage(days, hours, mins, secs) {\n    this.days.textContent = days;\n    this.hours.textContent = hours;\n    this.minutes.textContent = mins;\n    this.seconds.textContent = secs;\n  }\n\n  showTime() {\n    setInterval(() => {\n      const currentTime = new Date().getTime();\n      const time = this.targetDate - currentTime;\n\n      const days = this.pad(Math.floor(time / (1000 * 60 * 60 * 24)));\n      const hours = this.pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\n      const mins = this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n      const secs = this.pad(Math.floor((time % (1000 * 60)) / 1000));\n\n      this.renderPage(days, hours, mins, secs);\n    }, 1000);\n  }\n}\n\nconst timer = new CountdownTimer({\n  selector: '#timer-1',\n  targetDate: new Date('Sept 31, 2021'),\n});\n\nconst startBtn = document.querySelector('button[data-action-start]');\nstartBtn.addEventListener('click', startTimer);\n\nfunction startTimer() {\n  startBtn.setAttribute('disabled', '');\n  timer.showTime();\n}\n"]}